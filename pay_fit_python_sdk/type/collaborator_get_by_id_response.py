# coding: utf-8

"""
    Partner API

    A Semi-Private API to let third parties communicate with PayFit

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from pay_fit_python_sdk.type.collaborator_get_by_id_response_addresses import CollaboratorGetByIdResponseAddresses
from pay_fit_python_sdk.type.collaborator_get_by_id_response_contracts import CollaboratorGetByIdResponseContracts
from pay_fit_python_sdk.type.collaborator_get_by_id_response_emails import CollaboratorGetByIdResponseEmails
from pay_fit_python_sdk.type.collaborator_get_by_id_response_phone_numbers import CollaboratorGetByIdResponsePhoneNumbers

class RequiredCollaboratorGetByIdResponse(TypedDict):
    # Id of the collaborator.
    id: str

    # Custom ID that can be set to a collaborator to ease their synchronization with external software.
    matricule: typing.Optional[str]

    # Firstname of the collaborator.
    firstName: str

    # Lastname of the collaborator.
    lastName: str

    # Second lastname of the collaborator. For now, it is possible that this field may be contained inside lastName field.
    secondLastName: typing.Optional[str]

    # Birth name of the collaborator.
    birthName: typing.Optional[str]

    # Birth date of the collaborator in the format YYYY-MM-DD
    birthDate: typing.Optional[date]

    # Date of the end of last active or current contract of the collaborator in the format YYYY-MM-DD
    terminationDate: typing.Optional[date]

    # The gender of the collaborator.
    gender: typing.Optional[str]

    emails: CollaboratorGetByIdResponseEmails

class OptionalCollaboratorGetByIdResponse(TypedDict, total=False):
    # Nationality of the collaborator. It will be available if `collaborators:legal-identity:read` scope is set on the token. Possible values: `AD`,`AF`,`ZA`,`AX`,`AL`,`DZ`,`DE`,`AO`,`AI`,`AQ`,`AG`,`SA`,`AR`,`AM`,`AW`,`AU`,`AT`,`AZ`,`BS`,`BH`,`BD`,`BB`,`BE`,`BZ`,`BJ`,`BM`,`BT`,`BY`,`BO`,`BQ`,`BA`,`BW`,`BV`,`BR`,`BN`,`BG`,`BF`,`BI`,`KY`,`KH`,`CM`,`CA`,`CV`,`CF`,`CL`,`CN`,`CX`,`CY`,`CC`,`CO`,`KM`,`CG`,`CD`,`CK`,`KR`,`KP`,`CR`,`CI`,`HR`,`CU`,`CW`,`DK`,`DJ`,`DO`,`DM`,`EG`,`SV`,`AE`,`EC`,`ER`,`ES`,`EE`,`US`,`ET`,`FK`,`FO`,`FJ`,`FI`,`FR`,`GA`,`GM`,`GE`,`GS`,`GH`,`GI`,`GR`,`GD`,`GL`,`GP`,`GU`,`GT`,`GG`,`GN`,`GQ`,`GW`,`GY`,`GF`,`HT`,`HM`,`HN`,`HK`,`HU`,`IM`,`UM`,`VG`,`VI`,`IN`,`ID`,`IR`,`IQ`,`IE`,`IS`,`IL`,`IT`,`JM`,`JP`,`JE`,`JO`,`KZ`,`KE`,`KG`,`KIXK`,``,`KW`,`LA`,`LS`,`LV`,`LB`,`LR`,`LY`,`LI`,`LT`,`LU`,`MO`,`MK`,`MG`,`MY`,`MW`,`MV`,`ML`,`MT`,`MP`,`MA`,`MH`,`MQ`,`MU`,`MR`,`YT`,`MX`,`FM`,`MD`,`MC`,`MN`,`ME`,`MS`,`MZ`,`MM`,`NA`,`NR`,`NP`,`NI`,`NE`,`NG`,`NU`,`NF`,`NO`,`NC`,`NZ`,`IO`,`OM`,`UG`,`UZ`,`PK`,`PW`,`PS`,`PA`,`PG`,`PY`,`NL`,`PE`,`PH`,`PN`,`PL`,`PF`,`PR`,`PT`,`QA`,`RE`,`RO`,`GB`,`RU`,`RW`,`EH`,`BL`,`KN`,`SM`,`MF`,`SX`,`PM`,`VA`,`VC`,`SH`,`LC`,`SB`,`WS`,`AS`,`ST`,`SN`,`RS`,`SC`,`SL`,`SG`,`SK`,`SI`,`SO`,`SD`,`SS`,`LK`,`SE`,`CH`,`SR`,`SJ`,`SZ`,`SY`,`TJ`,`TW`,`TZ`,`TD`,`CZ`,`TF`,`TH`,`TL`,`TG`,`TK`,`TO`,`TT`,`TN`,`TM`,`TC`,`TR`,`TV`,`UA`,`UY`,`VU`,`VE`,`VN`,`WF`,`YE`,`ZM`,`ZW`.
    nationality: typing.Optional[str]

    # Country of birth of the collaborator. It will be available if `collaborators:legal-identity:read` scope is set on the token.
    countryOfBirth: typing.Optional[str]

    # \"social Security number\" of the collaborator. It will be available if `collaborators:social-security:read` scope is set on the token.
    socialSecurityNumber: typing.Optional[str]

    # \"numero technique temporaire\" of the collaborator. It is used only for France, as a replacement for the social security number when not available yet for the collaborator. It will be available if `collaborators:social-security:read` scope is set on the token.
    temporaryTechnicalNumber: typing.Optional[str]

    # The collaborator's BIC (Bank Identifier Code). It will be available if `collaborators:bank-info:read` scope is set on the token.'
    bic: typing.Optional[str]

    # The collaborator's IBAN (International Bank Account Number). It will be available if `collaborators:bank-info:read` scope is set on the token.'
    iban: typing.Optional[str]

    phoneNumbers: CollaboratorGetByIdResponsePhoneNumbers

    addresses: CollaboratorGetByIdResponseAddresses

    # The manager collaborator's id of the collaborator. If the collaborator does not have a manager this field will be null. Only available if `collaborators:management:read` scope is set on the token.
    managerId: typing.Optional[str]

    # The team name of the collaborator. If the collaborator doesn't belong to a team, `null` will be returned. Only available if `collaborators:management:read` scope is set on the token.
    teamName: typing.Optional[str]

    contracts: CollaboratorGetByIdResponseContracts

class CollaboratorGetByIdResponse(RequiredCollaboratorGetByIdResponse, OptionalCollaboratorGetByIdResponse):
    pass
