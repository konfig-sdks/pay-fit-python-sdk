# coding: utf-8

"""
    Partner API

    A Semi-Private API to let third parties communicate with PayFit

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from pay_fit_python_sdk.pydantic.get_health_insurance_contracts_response_contracts_item_affiliated_contract_ids import GetHealthInsuranceContractsResponseContractsItemAffiliatedContractIds

class GetHealthInsuranceContractsResponseContractsItem(BaseModel):
    # The generated PayFit id of the contract
    id_contrat: str = Field(alias='idContrat')

    # The reference of the contract
    ref_contrat: typing.Optional[str] = Field(alias='refContrat')

    code_population: typing.Optional[str] = Field(alias='codePopulation')

    code_option: typing.Optional[str] = Field(alias='codeOption')

    affiliated_contract_ids: GetHealthInsuranceContractsResponseContractsItemAffiliatedContractIds = Field(alias='affiliatedContractIds')

    # The computation type of the health insurance contribution contract (1: Rate; 2: Fixed amount; 3: Rate and fixed amount)
    mode_calcul_cotisation: Literal["1", "2", "3", None] = Field(alias='modeCalculCotisation')

    # The contribution base (1: Tiers; 2: Gross salary; 3: Tiers and gross salary; 4: PMSS; 5: Tiers, gross salary, and PMSS)
    base_de_cotisation: Literal["1", "2", "3", "4", "5", None] = Field(alias='baseDeCotisation')

    # The contribution rate supported by employer. Rate from 0 to 1, where 1 represent 100%
    taux_cotisation_patronale: typing.Optional[typing.Union[int, float]] = Field(alias='tauxCotisationPatronale')

    # The contribution rate supported by employee. Rate from 0 to 1, where 1 represent 100%
    taux_cotisation_salariale: typing.Optional[typing.Union[int, float]] = Field(alias='tauxCotisationSalariale')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
